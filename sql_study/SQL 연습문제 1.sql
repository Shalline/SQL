/*
   날짜 : 2025/07/18
   이름 : 김수진
   내용 : SQL 실습하기
*/

-- 실습 1-1
// 이거는 SQL PLUS에서 설정하기!!
ALTER SESSION SET "_ORACLE_SCRIPT"=true;
CREATE USER shop IDENTIFIED BY 1234;
GRANT CONNECT, RESOURCE, UNLIMITED TABLESPACE TO shop;

DROP TABLE CUSTOMER;

-- 실습 1-2
CREATE TABLE CUSTOMER(
    CID VARCHAR2(20) PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    HP CHAR(13),
    ADDRESS VARCHAR2(200),
    RDATE DATE
);
CREATE TABLE PRODUCT(
    PHO NUMBER(4) PRIMARY KEY,
    PNAME VARCHAR2(30) NOT NULL,
    STOCK NUMBER DEFAULT 0 NOT NULL,
    PRICE NUMBER,
    COMPANY VARCHAR2(20) NOT NULL
);
CREATE TABLE ORDERS(
    ORD_NO NUMBER GENERATED ALWAYS AS IDENTITY
        PRIMARY KEY,
    ORD_CID VARCHAR2(20) NOT NULL,
    ORD_PNO NUMBER(4) NOT NULL,
    ORD_CNT NUMBER DEFAULT 1 NOT NULL,
    ORD_DATE DATE
);

-- 실습 1-3
DELETE FROM Customer WHERE CID = 'C101';

INSERT INTO CUSTOMER VALUES 
    ('C101', '김유신', '010-1234-1001', '김해시 봉황동', '2022-01-01');
INSERT INTO CUSTOMER VALUES (
    'C102', '김춘추', '010-1234-1002', '경주시 보문동', '2022-01-02');
INSERT INTO CUSTOMER VALUES (
    'C103', '장보고', '010-1234-1003', '완도군 청산면', '2022-01-03'
);
INSERT INTO CUSTOMER VALUES (
    'C104', '강감찬', '010-1234-1004', '서울시 마포구', '2022-01-04'
);
INSERT INTO CUSTOMER VALUES (
    'C105', '이성계', '', '', '2022-01-05'
);
INSERT INTO CUSTOMER VALUES (
    'C106', '정철', '010-1234-1006', '경기도 용인시', '2022-01-06'
);
INSERT INTO CUSTOMER VALUES (
    'C107', '허준', '', '', '2022-01-07'
);
INSERT INTO CUSTOMER VALUES (
    'C108', '이순신', '010-1234-1008', '서울시 영등포구', '2022-01-08'
);
INSERT INTO CUSTOMER VALUES (
    'C109', '송상현', '010-1234-1009', '부산시 동래구', '2022-01-09'
);
INSERT INTO CUSTOMER VALUES (
    'C110', '정약용', '010-1234-1010', '경기도 광주시', '2022-01-10'
);
// INSERT INTO CUSTOMER VALUES ();
DELETE FROM ORDERS;
SELECT * FROM CUSTOMER;
DELETE FROM Customer WHERE CID = 'C101';

SELECT * FROM PRODUCT;
SELECT * FROM ORDERS;

INSERT INTO Product VALUES 
    (1, '새우깡', 5000, 1500, '농심');
INSERT INTO Product VALUES 
    (2, '초코파이', 2500, 2500, '오리온');
INSERT INTO Product VALUES 
    (3, '포카칩', 3600, 1700, '오리온');
INSERT INTO Product VALUES 
    (4, '양파링', 1250, 1800, '농심');
INSERT INTO Product VALUES 
    (5, '죠리퐁', 2200, NULL, '크라운');
INSERT INTO Product VALUES 
    (6, '마가렛트', 3500, 3500, '롯데');
INSERT INTO Product VALUES 
    (7, '뿌셔뿌셔', 1650, 1200, '오뚜기');
// INSERT INTO ORDERS VALUES ();

INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c102', 3, 2, TO_DATE('2022-07-01 13:15:10'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c101', 4, 1, TO_DATE('2022-07-01 14:16:11'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c108', 1, 1, TO_DATE('2022-07-01 17:23:18'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c109', 6, 5, TO_DATE('2022-07-02 10:46:36'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE)
    VALUES ('c102', 2, 1, TO_DATE('2022-07-03 09:15:37'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c101', 7, 3, TO_DATE('2022-07-03 12:35:12'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c110', 1, 2, TO_DATE('2022-07-03 16:55:36'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c104', 2, 4, TO_DATE('2022-07-04 14:23:23'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c102', 1, 3, TO_DATE('2022-07-04 21:54:34'));
INSERT INTO Orders (ORD_CID, ORD_PNO, ORD_CNT, ORD_DATE) 
    VALUES ('c107', 6, 1, TO_DATE('2022-07-05 14:21:03'));

-- 실습 1-4
SELECT * FROM CUSTOMER;

-- 실습 1-5
SELECT CID, NAME, HP FROM CUSTOMER;

-- 실습 1-6
SELECT * FROM PRODUCT;

-- 실습 1-7
SELECT COMPANY FROM PRODUCT;

-- 실습 1-8
// 중복없이 조회
SELECT DISTINCT COMPANY FROM PRODUCT;

-- 실습 1-9
SELECT PNAME, PRICE FROM PRODUCT;

-- 실습 1-10
SELECT pname, price, price + 500 AS 조정단가 FROM Product;

-- 실습 1-11
SELECT pname, stock, price
    FROM Product
    WHERE company = '오리온';

-- 실습 1-12;
// 아니 ㅋㅋㅋㅋㅋ 테이블에 소문자 C로 되어 있음 ㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋㅋ
SELECT ORD_PNO, ORD_CNT, ORD_DATE  
    FROM ORDERS 
    WHERE ORD_CID = 'c102';
    
SELECT * FROM ORDERS;
    
-- 실습 1-13; 이문제 너무 어려워 모르겠어 ㅠ
// 주문 테이블에서 'c102' 고객이 2개이상 주문한 
// 주문제품, 수량, 주문일자를 조회하시오. 

SELECT ORD_PNO,ORD_CNT, ORD_DATE
FROM Orders
WHERE ORD_CID = 'c102'
AND ORD_CNT >=2;

-- 실습 1-14;
SELECT * FROM PRODUCT 
    WHERE PRICE >=1000 AND PRICE <=2000;

-- 실습 1-15;
// 고객 테이블에서 성이 김씨인 고객의 아이디, 이름, 휴대폰, 주소를 조회하시오
SELECT CID, NAME, HP, ADDRESS FROM CUSTOMER
    WHERE NAME LIKE '김%';

-- 실습 1-16;
SELECT CID, NAME, HP, ADDRESS FROM CUSTOMER
    WHERE NAME LIKE '__';

-- 실습 1-17;
SELECT * FROM CUSTOMER WHERE HP IS NULL;

-- 실습 1-18;
SELECT * FROM CUSTOMER 
    WHERE ADDRESS IS NOT NULL;

-- 실습 1-19;
SELECT * FROM CUSTOMER 
    ORDER BY RDATE DESC;

-- 실습 1-20;
SELECT * FROM Orders
    WHERE ORD_CNT >= 3
    ORDER BY ORD_CNT DESC, ORD_PNO ASC;
    
-- 실습 1-21;
SELECT AVG(PRICE) FROM product;

-- 실습 1-22;
SELECT SUM(STOCK) AS "재고량 합계"
    FROM PRODUCT WHERE COMPANY = '농심';

-- 실습 1-23;
SELECT COUNT(CID) AS "고객수" FROM customer;
SELECT COUNT(*) AS "고객수" FROM customer;

-- 실습 1-24;
SELECT COUNT(DISTINCT COMPANY) AS "제조업체 수" 
    FROM product;

-- 실습 1-25;
SELECT ORD_PNO AS "주문 상품번호",
    SUM(ORD_CNT) AS "총 주문수량" FROM ORDERS
    GROUP BY ORD_PNO 
    ORDER BY ORD_PNO ASC;

-- 실습 1-26;
SELECT COMPANY AS "제조업체", 
    COUNT(8) AS "제품수", 
    MAX(PRICE) AS "최고가" FROM PRODUCT
    GROUP BY COMPANY
    ORDER BY COMPANY ASC;

-- 실습 1-27;
SELECT company AS 제조업체, COUNT(*) AS 제품수, 
    MAX(price) AS 최고가 
    FROM Product GROUP BY company 
    HAVING COUNT(*) >=2;
// 그룹의 조건은 HAVING

-- 실습 1-28;
SELECT ORD_PNO, ORD_CID, 
    SUM(ORD_CNT) 
    AS "총 주문수량" FROM Orders
    GROUP BY ORD_PNO, ORD_CID
    ORDER BY ORD_PNO;

-- 실습 1-29;
SELECT ORD_CID, PNAME from Orders A
    JOIN PRODUCT B
    ON A.ORD_PNO = B.PHO
    WHERE ORD_CID = 'C102';
     
-- 실습 1-30;
//SELECT ORD_CID, NAME, PNAME, ORD_DATE from ORDERS A
//    JOIN CUSTOMER B on A.ORD_CID = B.CID
//    JOIN PRODUCT C on A.ORD_PNO = C.PHO
//    WHERE ORD_DATE LIKE '2022-07-03%';
    // WHERE SUBSTR(ORD_DATE, 1,10) = '2022-07-03';
    // 이걸로 해도 됨
    // CUSTOMER에서는 C101이고 ORDERS에서는 c101임.

// C랑 c에서도 되게 LOWER로 조정
SELECT A.ORD_CID, B.NAME, C.PNAME, A.ORD_DATE
    FROM ORDERS A
    JOIN CUSTOMER B ON LOWER(A.ORD_CID) = LOWER(B.CID)
    JOIN PRODUCT C ON A.ORD_PNO = C.PHO
WHERE ORD_DATE LIKE '2022-07-03%'
ORDER BY ORD_DATE ASC;

SELECT A.ORD_CID, B.NAME, C.PNAME, A.ORD_DATE
    FROM ORDERS A
    JOIN CUSTOMER B ON LOWER(A.ORD_CID) = LOWER(B.CID)
    JOIN PRODUCT C ON A.ORD_PNO = C.PHO
WHERE SUBSTR(ORD_DATE, 1,10) = '2022-07-03'
ORDER BY ORD_DATE ASC;
